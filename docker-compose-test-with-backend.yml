version: '3.8'

services:
  # Backend Service
  efilibrary-backend:
    container_name: efilibrary-backend
    image: ghcr.io/libraryprojectgroup/library-project-backend:latest
    environment:
      DATABASE_SERVER: ${DATABASE_SERVER}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      OIDC_AUTH_BACKLINK_URL: ${OIDC_AUTH_BACKLINK_URL} 
      OIDC_AUTH_REDIRECT_URL: ${OIDC_AUTH_REDIRECT_URL}
      PORT: 3002
    volumes:
      - sql:/app/sql/.
    networks:
      - testing-network  
    ports:
      - '3002:3002'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3002/health" ]
      interval: 15s
      timeout: 10s
      retries: 15

  # MySQL Database
  efilibrary-mysql:
    image: mysql
    volumes:
      - sql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - testing-network  
    ports:
      - 3306:3306
    expose:
      - 3306
  # Frontend tests Service
  frontend:
    shm_size: 2gb # Needed for chrome not to crash
    container_name: frontend
    image: frontend
    command: npm run start
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL}
      GENERATE_SOURCEMAP: 'false'
      TESTUSERNAME: ${TESTUSERNAME}
      TESTPASSWORD: ${TESTPASSWORD}
      TESTUSERNAME2: ${TESTUSERNAME2}
      TESTPASSWORD2: ${TESTPASSWORD2}
    volumes:
      - ./src:/app/src
      - ./robot:/app/robot
      - ./public:/app/public:ro
    ports:
      - '3000:3000'
    networks:
      - testing-network  
    depends_on:
      efilibrary-backend:
        condition: service_healthy
    
networks:
  testing-network:        
volumes:
  sql:
